/* Created by mdot for Matlab */
digraph m2html {
  across -> matrix;
  across -> nv;
  add -> full;
  add -> isfull;
  add -> nv;
  add -> resize;
  add -> size;
  add -> sparse;
  alpha -> incidence_matrix;
  alpha -> size;
  bfstree -> add;
  bfstree -> copy_labels;
  bfstree -> embed;
  bfstree -> getxy;
  bfstree -> hasxy;
  bfstree -> is_labeled;
  bfstree -> issparse;
  bfstree -> neighbors;
  bfstree -> nv;
  bfstree -> resize;
  bfstree -> sparse;
  bipartition -> components;
  bipartition -> matrix;
  bipartition -> ne;
  bipartition -> nv;
  bipmatch -> intersect;
  bipmatch -> matrix;
  bipmatch -> nv;
  bipmatch -> union;
  bridges -> add;
  bridges -> copy;
  bridges -> delete;
  bridges -> edges;
  bridges -> find_path;
  bridges -> free;
  bridges -> full;
  bridges -> graph;
  bridges -> has;
  bridges -> incidence_matrix;
  bridges -> ne;
  bucky -> bucky;
  bucky -> embed;
  bucky -> full;
  bucky -> set_matrix;
  cartesian -> add;
  cartesian -> clear_edges;
  cartesian -> embed;
  cartesian -> get_label;
  cartesian -> getxy;
  cartesian -> has;
  cartesian -> hasxy;
  cartesian -> is_labeled;
  cartesian -> label;
  cartesian -> nv;
  cartesian -> resize;
  cayley -> add;
  cayley -> clear_labels;
  cayley -> display;
  cayley -> edges;
  cayley -> label;
  cayley -> nv;
  cayley -> resize;
  cayley -> size;
  cdraw -> alpha;
  cdraw -> color;
  cdraw -> edge_color;
  cdraw -> edges;
  cdraw -> embed;
  cdraw -> getxy;
  cdraw -> hasxy;
  cdraw -> ne;
  cdraw -> nv;
  cdraw -> size;
  chromatic_poly -> matrix;
  chromatic_poly -> size;
  circulant -> add;
  circulant -> clear_edges;
  circulant -> resize;
  clear_edges -> issparse;
  clear_edges -> nv;
  clear_edges -> sparse;
  color -> color;
  color -> deg;
  color -> incidence_matrix;
  color -> neighbors;
  color -> nv;
  complement -> copy;
  complement -> fast_set_matrix;
  complement -> full;
  complement -> issparse;
  complement -> matrix;
  complement -> nv;
  complete -> fast_set_matrix;
  complete -> nv;
  component -> matrix;
  component -> nv;
  components -> component;
  components -> nv;
  contract -> add;
  contract -> delete;
  contract -> neighbors;
  contract -> nv;
  copy_labels -> get_label;
  copy_labels -> is_labeled;
  copy_labels -> label;
  copy_labels -> nv;
  cube -> add;
  cube -> cartesian;
  cube -> clear_edges;
  cube -> complete;
  cube -> copy;
  cube -> cube;
  cube -> embed;
  cube -> free;
  cube -> full;
  cube -> graph;
  cube -> path;
  cube -> resize;
  cycle -> add;
  cycle -> embed;
  cycle -> path;
  deg -> full;
  delete -> delete;
  delete -> hasxy;
  delete -> is_labeled;
  delete -> nv;
  delete -> size;
  dfstree -> add;
  dfstree -> clear_edges;
  dfstree -> copy;
  dfstree -> copy_labels;
  dfstree -> embed;
  dfstree -> getxy;
  dfstree -> hasxy;
  dfstree -> is_labeled;
  dfstree -> neighbors;
  dfstree -> nv;
  diam -> dist;
  disjoint_union -> embed;
  disjoint_union -> getxy;
  disjoint_union -> hasxy;
  disjoint_union -> issparse;
  disjoint_union -> make_logical;
  disjoint_union -> nv;
  disjoint_union -> rmxy;
  disjoint_union -> sparse;
  display -> isfull;
  display -> ne;
  display -> nv;
  dist -> dist;
  dist -> matrix;
  dist -> nv;
  distxy -> dist;
  distxy -> embed;
  distxy -> getxy;
  distxy -> hasxy;
  distxy -> nv;
  distxy -> size;
  dodecahedron -> add;
  dodecahedron -> clear_edges;
  dodecahedron -> embed;
  dodecahedron -> full;
  dodecahedron -> resize;
  dom -> matrix;
  dom -> nv;
  dot -> clear_labels;
  dot -> edges;
  dot -> get_label;
  dot -> is_labeled;
  dot -> label;
  dot -> ne;
  dot -> nv;
  draw -> alpha;
  draw -> edge_color;
  draw -> edges;
  draw -> embed;
  draw -> getxy;
  draw -> hasxy;
  draw -> ne;
  draw -> nv;
  draw_labels -> get_label;
  draw_labels -> getxy;
  draw_labels -> is_labeled;
  draw_labels -> label;
  draw_labels -> nv;
  edge_color -> color;
  edge_color -> edge_color;
  edge_color -> edges;
  edge_color -> free;
  edge_color -> graph;
  edge_color -> line_graph;
  eig -> eig;
  eig -> matrix;
  embed -> nv;
  embed -> size;
  eq -> size;
  euler_trail -> add;
  euler_trail -> components;
  euler_trail -> copy;
  euler_trail -> deg;
  euler_trail -> delete;
  euler_trail -> free;
  euler_trail -> graph;
  euler_trail -> has_path;
  euler_trail -> ne;
  euler_trail -> neighbors;
  fgraph -> resize;
  fgraph -> set_matrix;
  find_path -> neighbors;
  find_path -> nv;
  full -> full;
  get_label -> is_labeled;
  getxy -> hasxy;
  graffle -> edges;
  graffle -> embed;
  graffle -> getxy;
  graffle -> hasxy;
  graffle -> ne;
  graffle -> nv;
  graffle -> scale;
  graph -> add;
  graph -> full;
  graph -> make_logical;
  graph -> size;
  graph -> sparse;
  grid -> add;
  grid -> embed;
  grid -> resize;
  hamiltonian_cycle -> add;
  hamiltonian_cycle -> clear_edges;
  hamiltonian_cycle -> components;
  hamiltonian_cycle -> copy;
  hamiltonian_cycle -> hamiltonian_cycle;
  hamiltonian_cycle -> has;
  hamiltonian_cycle -> neighbors;
  hamiltonian_cycle -> nv;
  hamiltonian_cycle -> path;
  has -> nv;
  has_path -> nv;
  hasxy -> nv;
  hasxy -> size;
  icosahedron -> add;
  icosahedron -> clear_edges;
  icosahedron -> embed;
  icosahedron -> full;
  icosahedron -> resize;
  incidence_matrix -> edges;
  incidence_matrix -> size;
  incidence_matrix -> sparse;
  induce -> embed;
  induce -> getxy;
  induce -> hasxy;
  induce -> is_labeled;
  induce -> label;
  intersect -> copy;
  intersect -> free;
  intersect -> graph;
  intersect -> matrix;
  intersect -> nv;
  intersect -> resize;
  interval_graph -> add;
  interval_graph -> clear_edges;
  interval_graph -> renumber;
  interval_graph -> resize;
  interval_graph -> rmxy;
  interval_graph -> size;
  isconnected -> nv;
  isfull -> issparse;
  iso -> components;
  iso -> copy;
  iso -> deg;
  iso -> delete;
  iso -> dist;
  iso -> eig;
  iso -> free;
  iso -> graph;
  iso -> matrix;
  iso -> neighbors;
  iso -> nv;
  iso -> renumber;
  iso -> size;
  issparse -> issparse;
  join -> embed;
  join -> getxy;
  join -> hasxy;
  join -> nv;
  join -> rmxy;
  label -> clear_labels;
  label -> is_labeled;
  label -> label;
  label -> nv;
  laplacian -> deg;
  laplacian -> matrix;
  laplacian -> nv;
  ldraw -> draw;
  ldraw -> draw_labels;
  ldraw -> is_labeled;
  ldraw -> ndraw;
  line_graph -> add;
  line_graph -> clear_edges;
  line_graph -> edges;
  line_graph -> embed;
  line_graph -> getxy;
  line_graph -> hasxy;
  line_graph -> resize;
  line_graph -> rmxy;
  line_graph -> size;
  load -> add;
  load -> embed;
  load -> full;
  load -> label;
  load -> nv;
  load -> resize;
  load -> sparse;
  match_join -> matrix;
  match_join -> nv;
  match_join -> set_matrix;
  mdsxy -> dist;
  mdsxy -> eig;
  mdsxy -> embed;
  mdsxy -> nv;
  mobius -> add;
  mobius -> cycle;
  mobius -> embed;
  mobius -> rmxy;
  mycielski -> complete;
  mycielski -> fast_set_matrix;
  mycielski -> matrix;
  mycielski -> mycielski;
  mycielski -> rmxy;
  nauty -> neighbors;
  nauty -> nv;
  ndraw -> draw;
  ndraw -> getxy;
  ndraw -> nv;
  ne -> size;
  neighbors -> nv;
  nsptrees -> deg;
  nsptrees -> matrix;
  nsptrees -> nv;
  octahedron -> add;
  octahedron -> clear_edges;
  octahedron -> embed;
  octahedron -> full;
  octahedron -> resize;
  omega -> alpha;
  omega -> complement;
  omega -> copy;
  omega -> free;
  omega -> graph;
  paley -> add;
  paley -> resize;
  paley -> rmxy;
  path -> add;
  path -> embed;
  path -> hasxy;
  path -> resize;
  path -> rmxy;
  petersen -> add;
  petersen -> embed;
  petersen -> full;
  petersen -> resize;
  prufer -> add;
  prufer -> copy;
  prufer -> deg;
  prufer -> delete;
  prufer -> edges;
  prufer -> free;
  prufer -> graph;
  prufer -> isconnected;
  prufer -> ne;
  prufer -> neighbors;
  prufer -> nv;
  prufer -> resize;
  random -> fast_set_matrix;
  random -> nv;
  random -> random;
  random -> sparse;
  random_bipartite -> clear_labels;
  random_bipartite -> embed;
  random_bipartite -> fast_set_matrix;
  random_bipartite -> rmxy;
  random_planar -> add;
  random_planar -> edges;
  random_planar -> embed;
  random_planar -> resize;
  random_planar -> size;
  random_regular -> add;
  random_regular -> clear_edges;
  random_regular -> clear_labels;
  random_regular -> copy;
  random_regular -> free;
  random_regular -> graph;
  random_regular -> ne;
  random_regular -> rmxy;
  random_tree -> add;
  random_tree -> clear_edges;
  random_tree -> renumber;
  random_tree -> resize;
  randxy -> embed;
  randxy -> nv;
  renumber -> embed;
  renumber -> getxy;
  renumber -> hasxy;
  renumber -> is_labeled;
  renumber -> make_logical;
  renumber -> nv;
  resistance -> isconnected;
  resistance -> laplacian;
  resistance -> nv;
  resize -> hasxy;
  resize -> is_labeled;
  resize -> isfull;
  resize -> make_logical;
  resize -> nv;
  resize -> sparse;
  rmxy -> hasxy;
  save -> edges;
  save -> get_label;
  save -> getxy;
  save -> hasxy;
  save -> is_labeled;
  save -> issparse;
  save -> ne;
  save -> nv;
  scale -> embed;
  scale -> getxy;
  scale -> hasxy;
  selective -> add;
  selective -> clear_edges;
  selective -> deg;
  selective -> resize;
  selective -> rmxy;
  set_matrix -> fast_set_matrix;
  sgf -> add;
  sgf -> edges;
  sgf -> embed;
  sgf -> full;
  sgf -> getxy;
  sgf -> hasxy;
  sgf -> ne;
  sgf -> nv;
  sgf -> resize;
  sgf -> size;
  sgf -> sparse;
  shiftgraph -> add;
  shiftgraph -> dot;
  shiftgraph -> label;
  shiftgraph -> resize;
  shiftgraph -> sparse;
  size -> ne;
  size -> nv;
  sl2graph -> add;
  sl2graph -> label;
  sl2graph -> resize;
  sl2graph -> size;
  sl2graph -> sparse;
  sparse -> sparse;
  split -> eig;
  split -> laplacian;
  sprandom -> rmxy;
  springxy -> embed;
  springxy -> getxy;
  springxy -> has;
  springxy -> hasxy;
  springxy -> isconnected;
  springxy -> nv;
  spy -> spy;
  subsref -> full;
  subsref -> neighbors;
  subsref -> nv;
  thresh -> deg;
  thresh -> set_matrix;
  trim -> deg;
  trim -> delete;
  trim -> nv;
  union -> copy;
  union -> free;
  union -> graph;
  union -> matrix;
  union -> nv;
  union -> resize;
  vertex_degree_sequence -> deg;
  vertex_degree_sequence -> neighbors;
  wheel -> add;
  wheel -> cycle;
  wheel -> nv;
  wheel -> resize;

  across [URL="across.html"];
  add [URL="add.html"];
  alpha [URL="alpha.html"];
  bfstree [URL="bfstree.html"];
  bipartition [URL="bipartition.html"];
  bipmatch [URL="bipmatch.html"];
  bridges [URL="bridges.html"];
  bucky [URL="bucky.html"];
  cartesian [URL="cartesian.html"];
  cayley [URL="cayley.html"];
  cdraw [URL="cdraw.html"];
  chromatic_poly [URL="chromatic_poly.html"];
  circulant [URL="circulant.html"];
  clear_edges [URL="clear_edges.html"];
  clear_labels [URL="clear_labels.html"];
  color [URL="color.html"];
  complement [URL="complement.html"];
  complete [URL="complete.html"];
  component [URL="component.html"];
  components [URL="components.html"];
  contract [URL="contract.html"];
  copy [URL="copy.html"];
  copy_labels [URL="copy_labels.html"];
  cube [URL="cube.html"];
  cycle [URL="cycle.html"];
  deg [URL="deg.html"];
  delete [URL="delete.html"];
  dfstree [URL="dfstree.html"];
  diam [URL="diam.html"];
  disjoint_union [URL="disjoint_union.html"];
  display [URL="display.html"];
  dist [URL="dist.html"];
  distxy [URL="distxy.html"];
  dodecahedron [URL="dodecahedron.html"];
  dom [URL="dom.html"];
  dot [URL="dot.html"];
  draw [URL="draw.html"];
  draw_labels [URL="draw_labels.html"];
  edge_color [URL="edge_color.html"];
  edges [URL="edges.html"];
  eig [URL="eig.html"];
  embed [URL="embed.html"];
  eq [URL="eq.html"];
  euler_trail [URL="euler_trail.html"];
  fast_set_matrix [URL="fast_set_matrix.html"];
  fgraph [URL="fgraph.html"];
  find_path [URL="find_path.html"];
  free [URL="free.html"];
  full [URL="full.html"];
  get_label [URL="get_label.html"];
  getxy [URL="getxy.html"];
  graffle [URL="graffle.html"];
  graph [URL="graph.html"];
  grid [URL="grid.html"];
  hamiltonian_cycle [URL="hamiltonian_cycle.html"];
  has [URL="has.html"];
  has_path [URL="has_path.html"];
  hasxy [URL="hasxy.html"];
  icosahedron [URL="icosahedron.html"];
  incidence_matrix [URL="incidence_matrix.html"];
  induce [URL="induce.html"];
  intersect [URL="intersect.html"];
  interval_graph [URL="interval_graph.html"];
  is_labeled [URL="is_labeled.html"];
  isconnected [URL="isconnected.html"];
  isfull [URL="isfull.html"];
  iso [URL="iso.html"];
  issparse [URL="issparse.html"];
  join [URL="join.html"];
  label [URL="label.html"];
  laplacian [URL="laplacian.html"];
  ldraw [URL="ldraw.html"];
  line_graph [URL="line_graph.html"];
  load [URL="load.html"];
  make_logical [URL="make_logical.html"];
  match_join [URL="match_join.html"];
  matrix [URL="matrix.html"];
  matrixOfGraph [URL="matrixOfGraph.html"];
  mdsxy [URL="mdsxy.html"];
  mobius [URL="mobius.html"];
  mycielski [URL="mycielski.html"];
  nauty [URL="nauty.html"];
  ndraw [URL="ndraw.html"];
  ne [URL="ne.html"];
  neighbors [URL="neighbors.html"];
  nsptrees [URL="nsptrees.html"];
  nv [URL="nv.html"];
  octahedron [URL="octahedron.html"];
  omega [URL="omega.html"];
  paley [URL="paley.html"];
  path [URL="path.html"];
  petersen [URL="petersen.html"];
  prufer [URL="prufer.html"];
  random [URL="random.html"];
  random_bipartite [URL="random_bipartite.html"];
  random_planar [URL="random_planar.html"];
  random_regular [URL="random_regular.html"];
  random_tree [URL="random_tree.html"];
  randxy [URL="randxy.html"];
  renumber [URL="renumber.html"];
  resistance [URL="resistance.html"];
  resize [URL="resize.html"];
  rmxy [URL="rmxy.html"];
  save [URL="save.html"];
  scale [URL="scale.html"];
  selective [URL="selective.html"];
  set_matrix [URL="set_matrix.html"];
  sgf [URL="sgf.html"];
  shiftgraph [URL="shiftgraph.html"];
  size [URL="size.html"];
  sl2graph [URL="sl2graph.html"];
  slot [URL="slot.html"];
  sparse [URL="sparse.html"];
  split [URL="split.html"];
  sprandom [URL="sprandom.html"];
  springxy [URL="springxy.html"];
  spy [URL="spy.html"];
  subsref [URL="subsref.html"];
  thresh [URL="thresh.html"];
  trim [URL="trim.html"];
  union [URL="union.html"];
  vertex_degree_sequence [URL="vertex_degree_sequence.html"];
  wheel [URL="wheel.html"];
}