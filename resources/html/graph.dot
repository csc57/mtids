/* Created by mdot for Matlab */
digraph m2html {
  mtids -> computeInputSizes;
  mtids -> compute_SCC;
  mtids -> compute_WCC;
  mtids -> about_mtids;
  mtids -> editSimParams;
  mtids -> edit_node;
  mtids -> export_as_matrix;
  mtids -> import_dynamic_params;
  mtids -> manageParamSets;
  mtids -> setnodecolor;
  mtids -> getDegree;
  mtids -> initPlotParams;
  mtids -> any_matrix_to_elist;
  mtids -> exportLayer;
  mtids -> exportLayer2;
  mtids -> exportSimulink;
  mtids -> exportSimulink2;
  mtids -> importSimulink;
  mtids -> add;
  mtids -> clear_edges;
  mtids -> complete;
  mtids -> delete;
  mtids -> draw;
  mtids -> edges;
  mtids -> eig;
  mtids -> embed;
  mtids -> free;
  mtids -> get_label;
  mtids -> getxy;
  mtids -> graph;
  mtids -> has;
  mtids -> label;
  mtids -> laplacian;
  mtids -> ldraw;
  mtids -> load;
  mtids -> matrix;
  mtids -> matrixOfGraph;
  mtids -> ndraw;
  mtids -> ne;
  mtids -> nv;
  mtids -> draw;
  mtids -> path;
  mtids -> random;
  mtids -> resize;
  mtids -> rmxy;
  mtids -> save;
  mtids -> size;
  mtids -> trim;
  mtids -> check;
  mtids -> ne;
  mtids -> nv;
  mtids -> size;
  mtids -> ne;
  mtids -> graph_destroy;
  mtids -> graph_init;
  mtids -> readImportedTemplates;
  mtids -> performSimulation;
  mtids -> systemConsistencyTest;
  old_draw -> edge_color;
  test_import_dynamic_parameters -> import_dynamic_params;
  TextField1InputSpecs_Callback -> size;
  TextField1InputSpecs_Callback -> size;
  checkNodeInput -> matrix;
  checkNodeInput -> size;
  checkNodeInput -> size;
  checkNodeInput -> templateHasDependingInputs;
  computeInputSizes -> checkNodeInput;
  computeInputSizes -> nv;
  computeInputSizes -> nv;
  compute_SCC -> copy;
  compute_SCC -> dfstree;
  compute_SCC -> fast_set_matrix;
  compute_SCC -> graph;
  compute_SCC -> matrix;
  compute_SCC -> nv;
  compute_SCC -> nv;
  compute_WCC -> copy;
  compute_WCC -> dfstree;
  compute_WCC -> fast_set_matrix;
  compute_WCC -> graph;
  compute_WCC -> matrix;
  compute_WCC -> nv;
  compute_WCC -> nv;
  about_mtids -> delete;
  about_mtids -> load;
  editSimParams -> delete;
  edit_node -> checkNodeInput;
  edit_node -> edit_paramValues;
  edit_node -> pp2;
  edit_node -> matrix_to_string;
  edit_node -> color;
  edit_node -> delete;
  edit_node -> display;
  edit_node -> color;
  edit_node -> size;
  edit_node -> display;
  edit_node -> size;
  edit_node -> display;
  edit_node -> set_stringPlotOutputSignals;
  edit_node -> set_stringSelectedStates;
  edit_paramValues -> isValidData;
  edit_paramValues -> delete;
  edit_paramValues -> size;
  edit_paramValues -> size;
  edit_paramValues -> saveParamSet2File;
  edit_paramValues -> testingValueSet;
  export_as_matrix -> getDegree;
  export_as_matrix -> adj_to_elist;
  export_as_matrix -> edges;
  export_as_matrix -> laplacian;
  export_as_matrix -> matrix;
  export_as_matrix -> matrixOfGraph;
  import_dynamic_params -> TextField1InputSpecs_Callback;
  import_dynamic_params -> TextField2InputSpecs_Callback;
  import_dynamic_params -> figResize;
  import_dynamic_params -> get_BlockParams;
  import_dynamic_params -> get_tableColumnWidth;
  import_dynamic_params -> isValidData;
  import_dynamic_params -> delete;
  import_dynamic_params -> size;
  import_dynamic_params -> size;
  import_dynamic_params -> newTablePosition;
  import_dynamic_params -> saveParamSet2File;
  import_dynamic_params -> sizeChar2Pixel;
  import_dynamic_params -> testingValueSet;
  inputParamsAdaptation -> delete;
  manageParamSets -> get_BlockParams;
  manageParamSets -> isValidData;
  manageParamSets -> delete;
  manageParamSets -> load;
  manageParamSets -> save;
  manageParamSets -> size;
  manageParamSets -> size;
  manageParamSets -> readImportedTemplates;
  manageParamSets -> saveParamSet2File;
  manageParamSets -> testingValueSet;
  pp2 -> delete;
  setnodecolor -> delete;
  setnodecolor -> size;
  setnodecolor -> size;
  getDegree -> matrix;
  getDegree -> size;
  getDegree -> size;
  getNumericValue -> size;
  getNumericValue -> size;
  get_BlockParams -> size;
  get_BlockParams -> size;
  get_tableColumnWidth -> size;
  get_tableColumnWidth -> size;
  get_tableColumnWidth -> sizeChar2Pixel;
  input_parameter_adaptation_Callback -> inputParamsAdaptation;
  input_parameter_adaptation_Callback -> nv;
  input_parameter_adaptation_Callback -> size;
  input_parameter_adaptation_Callback -> check;
  input_parameter_adaptation_Callback -> nv;
  input_parameter_adaptation_Callback -> size;
  input_parameter_adaptation_Callback -> systemConsistencyTest;
  adj_to_elist -> ne;
  adj_to_elist -> nv;
  adj_to_elist -> size;
  adj_to_elist -> ne;
  adj_to_elist -> nv;
  adj_to_elist -> size;
  adj_to_elist -> ne;
  any_matrix_to_elist -> adj_to_elist;
  any_matrix_to_elist -> size;
  any_matrix_to_elist -> size;
  buildSubsystem -> blockCanvas;
  buildSubsystem -> blockPos;
  create_ss_model -> matrix_to_string;
  exportLayer -> blockCanvas;
  exportLayer -> templateModify;
  exportLayer -> size;
  exportLayer -> size;
  exportLayer2 -> blockCanvas;
  exportLayer2 -> templateModify2;
  exportLayer2 -> size;
  exportLayer2 -> size;
  exportSimulink -> blockCanvas;
  exportSimulink -> templateModify;
  exportSimulink -> size;
  exportSimulink -> size;
  exportSimulink2 -> blockCanvas;
  exportSimulink2 -> templateModify2;
  exportSimulink2 -> size;
  exportSimulink2 -> size;
  importSimulink -> blockPos;
  matrix_to_string -> size;
  matrix_to_string -> size;
  templateModify -> blockCanvas;
  templateModify -> blockPos;
  templateModify2 -> blockCanvas;
  templateModify2 -> blockPos;
  isValidData -> size;
  isValidData -> size;
  across -> matrix;
  across -> nv;
  across -> nv;
  add -> full;
  add -> isfull;
  add -> nv;
  add -> resize;
  add -> size;
  add -> sparse;
  add -> nv;
  add -> size;
  add -> set_large;
  alpha -> incidence_matrix;
  alpha -> size;
  alpha -> size;
  bfstree -> add;
  bfstree -> copy_labels;
  bfstree -> embed;
  bfstree -> getxy;
  bfstree -> hasxy;
  bfstree -> is_labeled;
  bfstree -> issparse;
  bfstree -> neighbors;
  bfstree -> nv;
  bfstree -> q_init;
  bfstree -> q_pop_front;
  bfstree -> q_push;
  bfstree -> q_size;
  bfstree -> resize;
  bfstree -> sparse;
  bfstree -> nv;
  bipartition -> components;
  bipartition -> matrix;
  bipartition -> ne;
  bipartition -> nv;
  bipartition -> ne;
  bipartition -> np;
  bipartition -> nv;
  bipartition -> partition;
  bipartition -> parts;
  bipartition -> ne;
  bipmatch -> intersect;
  bipmatch -> matrix;
  bipmatch -> nv;
  bipmatch -> union;
  bipmatch -> nv;
  bipmatch -> parts;
  bridges -> add;
  bridges -> copy;
  bridges -> delete;
  bridges -> edges;
  bridges -> find_path;
  bridges -> free;
  bridges -> full;
  bridges -> graph;
  bridges -> has;
  bridges -> incidence_matrix;
  bridges -> ne;
  bridges -> ne;
  bridges -> ne;
  bucky -> bucky;
  bucky -> embed;
  bucky -> full;
  bucky -> set_matrix;
  cartesian -> add;
  cartesian -> clear_edges;
  cartesian -> embed;
  cartesian -> get_label;
  cartesian -> getxy;
  cartesian -> has;
  cartesian -> hasxy;
  cartesian -> is_labeled;
  cartesian -> label;
  cartesian -> nv;
  cartesian -> resize;
  cartesian -> nv;
  cayley -> add;
  cayley -> clear_labels;
  cayley -> display;
  cayley -> edges;
  cayley -> label;
  cayley -> nv;
  cayley -> find_row;
  cayley -> resize;
  cayley -> size;
  cayley -> array;
  cayley -> display;
  cayley -> np;
  cayley -> nv;
  cayley -> size;
  cayley -> array;
  cayley -> display;
  cayley -> permutation;
  cdraw -> alpha;
  cdraw -> color;
  cdraw -> edge_color;
  cdraw -> edges;
  cdraw -> embed;
  cdraw -> getxy;
  cdraw -> hasxy;
  cdraw -> ne;
  cdraw -> nv;
  cdraw -> color;
  cdraw -> size;
  cdraw -> ne;
  cdraw -> np;
  cdraw -> nv;
  cdraw -> parts;
  cdraw -> size;
  cdraw -> ne;
  cdraw -> coloring;
  chromatic_poly -> matrix;
  chromatic_poly -> size;
  chromatic_poly -> size;
  circulant -> add;
  circulant -> clear_edges;
  circulant -> resize;
  clear_edges -> issparse;
  clear_edges -> nv;
  clear_edges -> sparse;
  clear_edges -> nv;
  color -> color;
  color -> deg;
  color -> incidence_matrix;
  color -> neighbors;
  color -> nv;
  color -> color;
  color -> np;
  color -> nv;
  color -> partition;
  color -> parts;
  complement -> copy;
  complement -> fast_set_matrix;
  complement -> full;
  complement -> issparse;
  complement -> matrix;
  complement -> nv;
  complement -> nv;
  complete -> fast_set_matrix;
  complete -> nv;
  complete -> nv;
  component -> matrix;
  component -> nv;
  component -> nv;
  components -> component;
  components -> nv;
  components -> np;
  components -> nv;
  components -> partition;
  contract -> add;
  contract -> delete;
  contract -> neighbors;
  contract -> nv;
  contract -> nv;
  copy_labels -> get_label;
  copy_labels -> is_labeled;
  copy_labels -> label;
  copy_labels -> nv;
  copy_labels -> nv;
  cube -> add;
  cube -> cartesian;
  cube -> clear_edges;
  cube -> complete;
  cube -> copy;
  cube -> cube;
  cube -> embed;
  cube -> free;
  cube -> full;
  cube -> graph;
  cube -> path;
  cube -> resize;
  cycle -> add;
  cycle -> embed;
  cycle -> path;
  deg -> full;
  delete -> delete;
  delete -> hasxy;
  delete -> is_labeled;
  delete -> nv;
  delete -> size;
  delete -> nv;
  delete -> size;
  dfstree -> add;
  dfstree -> clear_edges;
  dfstree -> copy;
  dfstree -> copy_labels;
  dfstree -> embed;
  dfstree -> getxy;
  dfstree -> hasxy;
  dfstree -> is_labeled;
  dfstree -> neighbors;
  dfstree -> nv;
  dfstree -> q_init;
  dfstree -> nv;
  diam -> dist;
  disjoint_union -> embed;
  disjoint_union -> getxy;
  disjoint_union -> hasxy;
  disjoint_union -> issparse;
  disjoint_union -> make_logical;
  disjoint_union -> nv;
  disjoint_union -> rmxy;
  disjoint_union -> sparse;
  disjoint_union -> nv;
  display -> isfull;
  display -> ne;
  display -> nv;
  display -> ne;
  display -> nv;
  display -> ne;
  dist -> dist;
  dist -> matrix;
  dist -> nv;
  dist -> nv;
  distxy -> dist;
  distxy -> embed;
  distxy -> getxy;
  distxy -> hasxy;
  distxy -> nv;
  distxy -> size;
  distxy -> nv;
  distxy -> size;
  dodecahedron -> add;
  dodecahedron -> clear_edges;
  dodecahedron -> embed;
  dodecahedron -> full;
  dodecahedron -> resize;
  dom -> matrix;
  dom -> nv;
  dom -> nv;
  dot -> clear_labels;
  dot -> edges;
  dot -> get_label;
  dot -> is_labeled;
  dot -> label;
  dot -> ne;
  dot -> nv;
  dot -> ne;
  dot -> nv;
  dot -> ne;
  draw -> alpha;
  draw -> edge_color;
  draw -> edges;
  draw -> embed;
  draw -> getxy;
  draw -> hasxy;
  draw -> ne;
  draw -> nv;
  draw -> ne;
  draw -> nv;
  draw -> ne;
  draw_labels -> get_label;
  draw_labels -> getxy;
  draw_labels -> is_labeled;
  draw_labels -> label;
  draw_labels -> nv;
  draw_labels -> nv;
  edge_color -> color;
  edge_color -> edge_color;
  edge_color -> edges;
  edge_color -> free;
  edge_color -> graph;
  edge_color -> line_graph;
  edge_color -> color;
  edge_color -> array;
  edge_color -> array;
  eig -> eig;
  eig -> matrix;
  embed -> nv;
  embed -> size;
  embed -> nv;
  embed -> size;
  eq -> size;
  eq -> size;
  euler_trail -> add;
  euler_trail -> components;
  euler_trail -> copy;
  euler_trail -> deg;
  euler_trail -> delete;
  euler_trail -> free;
  euler_trail -> graph;
  euler_trail -> has_path;
  euler_trail -> ne;
  euler_trail -> neighbors;
  euler_trail -> ne;
  euler_trail -> np;
  euler_trail -> parts;
  euler_trail -> ne;
  fgraph -> resize;
  fgraph -> set_matrix;
  find_path -> neighbors;
  find_path -> nv;
  find_path -> q_init;
  find_path -> q_pop_front;
  find_path -> q_push;
  find_path -> q_size;
  find_path -> nv;
  free -> graph_system_exists;
  full -> full;
  get_label -> is_labeled;
  getxy -> hasxy;
  graffle -> edges;
  graffle -> embed;
  graffle -> getxy;
  graffle -> hasxy;
  graffle -> ne;
  graffle -> nv;
  graffle -> scale;
  graffle -> ne;
  graffle -> nv;
  graffle -> ne;
  graph -> add;
  graph -> full;
  graph -> make_logical;
  graph -> size;
  graph -> sparse;
  graph -> size;
  graph -> find_available;
  graph -> graph_init;
  graph -> graph_system_exists;
  grid -> add;
  grid -> embed;
  grid -> resize;
  hamiltonian_cycle -> add;
  hamiltonian_cycle -> clear_edges;
  hamiltonian_cycle -> components;
  hamiltonian_cycle -> copy;
  hamiltonian_cycle -> hamiltonian_cycle;
  hamiltonian_cycle -> has;
  hamiltonian_cycle -> neighbors;
  hamiltonian_cycle -> nv;
  hamiltonian_cycle -> path;
  hamiltonian_cycle -> np;
  hamiltonian_cycle -> nv;
  has -> nv;
  has -> nv;
  has_path -> nv;
  has_path -> nv;
  hasxy -> nv;
  hasxy -> size;
  hasxy -> nv;
  hasxy -> size;
  icosahedron -> add;
  icosahedron -> clear_edges;
  icosahedron -> embed;
  icosahedron -> full;
  icosahedron -> resize;
  incidence_matrix -> edges;
  incidence_matrix -> size;
  incidence_matrix -> sparse;
  incidence_matrix -> size;
  induce -> embed;
  induce -> getxy;
  induce -> hasxy;
  induce -> is_labeled;
  induce -> label;
  intersect -> copy;
  intersect -> free;
  intersect -> graph;
  intersect -> matrix;
  intersect -> nv;
  intersect -> resize;
  intersect -> nv;
  interval_graph -> add;
  interval_graph -> clear_edges;
  interval_graph -> renumber;
  interval_graph -> resize;
  interval_graph -> rmxy;
  interval_graph -> size;
  interval_graph -> size;
  isconnected -> nv;
  isconnected -> nv;
  isfull -> issparse;
  iso -> components;
  iso -> copy;
  iso -> deg;
  iso -> delete;
  iso -> dist;
  iso -> eig;
  iso -> free;
  iso -> graph;
  iso -> matrix;
  iso -> neighbors;
  iso -> nv;
  iso -> find_row;
  iso -> renumber;
  iso -> size;
  iso -> np;
  iso -> nv;
  iso -> parts;
  iso -> size;
  iso -> inv;
  iso -> permutation;
  issparse -> issparse;
  join -> embed;
  join -> getxy;
  join -> hasxy;
  join -> nv;
  join -> rmxy;
  join -> nv;
  label -> clear_labels;
  label -> is_labeled;
  label -> label;
  label -> nv;
  label -> nv;
  laplacian -> deg;
  laplacian -> matrix;
  laplacian -> nv;
  laplacian -> nv;
  ldraw -> draw;
  ldraw -> draw_labels;
  ldraw -> is_labeled;
  ldraw -> ndraw;
  ldraw -> draw;
  line_graph -> add;
  line_graph -> clear_edges;
  line_graph -> edges;
  line_graph -> embed;
  line_graph -> getxy;
  line_graph -> hasxy;
  line_graph -> resize;
  line_graph -> rmxy;
  line_graph -> size;
  line_graph -> size;
  load -> add;
  load -> embed;
  load -> full;
  load -> label;
  load -> nv;
  load -> resize;
  load -> sparse;
  load -> nv;
  match_join -> matrix;
  match_join -> nv;
  match_join -> set_matrix;
  match_join -> nv;
  mdsxy -> dist;
  mdsxy -> eig;
  mdsxy -> embed;
  mdsxy -> nv;
  mdsxy -> nv;
  mobius -> add;
  mobius -> cycle;
  mobius -> embed;
  mobius -> rmxy;
  mycielski -> complete;
  mycielski -> fast_set_matrix;
  mycielski -> matrix;
  mycielski -> mycielski;
  mycielski -> rmxy;
  nauty -> neighbors;
  nauty -> nv;
  nauty -> nv;
  ndraw -> draw;
  ndraw -> getxy;
  ndraw -> nv;
  ndraw -> draw;
  ndraw -> nv;
  ne -> size;
  ne -> size;
  neighbors -> nv;
  neighbors -> nv;
  nsptrees -> deg;
  nsptrees -> matrix;
  nsptrees -> nv;
  nsptrees -> nv;
  octahedron -> add;
  octahedron -> clear_edges;
  octahedron -> embed;
  octahedron -> full;
  octahedron -> resize;
  chromatic_poly -> chromatic_poly;
  chromatic_poly -> contract;
  chromatic_poly -> copy;
  chromatic_poly -> delete;
  chromatic_poly -> edges;
  chromatic_poly -> free;
  chromatic_poly -> graph;
  chromatic_poly -> ne;
  chromatic_poly -> nv;
  chromatic_poly -> chromatic_poly;
  chromatic_poly -> ne;
  chromatic_poly -> nv;
  chromatic_poly -> ne;
  color -> deg;
  color -> neighbors;
  color -> nv;
  color -> nv;
  color -> partition;
  draw -> edge_color;
  draw -> embed;
  draw -> getxy;
  draw -> has;
  draw -> hasxy;
  draw -> nv;
  draw -> nv;
  euler_trail -> add;
  euler_trail -> components;
  euler_trail -> copy;
  euler_trail -> deg;
  euler_trail -> delete;
  euler_trail -> free;
  euler_trail -> graph;
  euler_trail -> has_path;
  euler_trail -> ne;
  euler_trail -> neighbors;
  euler_trail -> nv;
  euler_trail -> ne;
  euler_trail -> np;
  euler_trail -> nv;
  euler_trail -> parts;
  euler_trail -> ne;
  iso -> complement;
  iso -> components;
  iso -> copy;
  iso -> deg;
  iso -> eig;
  iso -> free;
  iso -> full;
  iso -> graph;
  iso -> laplacian;
  iso -> nv;
  iso -> renumber;
  iso -> size;
  iso -> np;
  iso -> nv;
  iso -> parts;
  iso -> size;
  iso -> inv;
  iso -> permutation;
  mtimes -> cartesian;
  mtimes -> graph;
  plus -> disjoint_union;
  plus -> graph;
  uminus -> complement;
  uminus -> copy;
  uminus -> graph;
  omega -> alpha;
  omega -> complement;
  omega -> copy;
  omega -> free;
  omega -> graph;
  paley -> add;
  paley -> resize;
  paley -> rmxy;
  path -> add;
  path -> embed;
  path -> hasxy;
  path -> resize;
  path -> rmxy;
  petersen -> add;
  petersen -> embed;
  petersen -> full;
  petersen -> resize;
  find_row -> find_row;
  find_row -> vector_compare;
  find_row -> size;
  find_row -> size;
  q_get -> q_size;
  prufer -> add;
  prufer -> copy;
  prufer -> deg;
  prufer -> delete;
  prufer -> edges;
  prufer -> free;
  prufer -> graph;
  prufer -> isconnected;
  prufer -> ne;
  prufer -> neighbors;
  prufer -> nv;
  prufer -> resize;
  prufer -> ne;
  prufer -> nv;
  prufer -> ne;
  random -> fast_set_matrix;
  random -> nv;
  random -> random;
  random -> sparse;
  random -> nv;
  random_bipartite -> clear_labels;
  random_bipartite -> embed;
  random_bipartite -> fast_set_matrix;
  random_bipartite -> rmxy;
  random_planar -> add;
  random_planar -> edges;
  random_planar -> embed;
  random_planar -> resize;
  random_planar -> size;
  random_planar -> size;
  random_regular -> add;
  random_regular -> clear_edges;
  random_regular -> clear_labels;
  random_regular -> copy;
  random_regular -> free;
  random_regular -> graph;
  random_regular -> ne;
  random_regular -> rmxy;
  random_regular -> ne;
  random_regular -> ne;
  random_tree -> add;
  random_tree -> clear_edges;
  random_tree -> renumber;
  random_tree -> resize;
  randxy -> embed;
  randxy -> nv;
  randxy -> nv;
  renumber -> embed;
  renumber -> getxy;
  renumber -> hasxy;
  renumber -> is_labeled;
  renumber -> make_logical;
  renumber -> nv;
  renumber -> array;
  renumber -> np;
  renumber -> nv;
  renumber -> parts;
  renumber -> array;
  renumber -> inv;
  renumber -> permutation;
  renumber -> perm;
  resistance -> isconnected;
  resistance -> laplacian;
  resistance -> nv;
  resistance -> nv;
  resize -> hasxy;
  resize -> is_labeled;
  resize -> isfull;
  resize -> make_logical;
  resize -> nv;
  resize -> sparse;
  resize -> nv;
  rmxy -> hasxy;
  save -> edges;
  save -> get_label;
  save -> getxy;
  save -> hasxy;
  save -> is_labeled;
  save -> issparse;
  save -> ne;
  save -> nv;
  save -> array;
  save -> ne;
  save -> nv;
  save -> array;
  save -> ne;
  scale -> embed;
  scale -> getxy;
  scale -> hasxy;
  selective -> add;
  selective -> clear_edges;
  selective -> deg;
  selective -> resize;
  selective -> rmxy;
  set_matrix -> fast_set_matrix;
  set_matrix -> check_matrix;
  sgf -> add;
  sgf -> edges;
  sgf -> embed;
  sgf -> full;
  sgf -> getxy;
  sgf -> hasxy;
  sgf -> ne;
  sgf -> nv;
  sgf -> resize;
  sgf -> size;
  sgf -> sparse;
  sgf -> ne;
  sgf -> nv;
  sgf -> size;
  sgf -> ne;
  sgf -> set_large;
  shiftgraph -> add;
  shiftgraph -> dot;
  shiftgraph -> label;
  shiftgraph -> resize;
  shiftgraph -> sparse;
  size -> ne;
  size -> nv;
  size -> ne;
  size -> nv;
  size -> ne;
  sl2graph -> add;
  sl2graph -> label;
  sl2graph -> resize;
  sl2graph -> size;
  sl2graph -> sparse;
  sl2graph -> size;
  sparse -> sparse;
  split -> eig;
  split -> laplacian;
  split -> partition;
  sprandom -> rmxy;
  springxy -> embed;
  springxy -> getxy;
  springxy -> has;
  springxy -> hasxy;
  springxy -> isconnected;
  springxy -> nv;
  springxy -> nv;
  spy -> spy;
  subsref -> full;
  subsref -> neighbors;
  subsref -> nv;
  subsref -> nv;
  thresh -> deg;
  thresh -> set_matrix;
  trim -> deg;
  trim -> delete;
  trim -> nv;
  trim -> nv;
  union -> copy;
  union -> free;
  union -> graph;
  union -> matrix;
  union -> nv;
  union -> resize;
  union -> nv;
  vertex_degree_sequence -> deg;
  vertex_degree_sequence -> neighbors;
  wheel -> add;
  wheel -> cycle;
  wheel -> nv;
  wheel -> resize;
  wheel -> nv;
  array -> nv;
  array -> nv;
  array -> parts;
  check -> full;
  display -> size;
  display -> size;
  eq -> full;
  eq -> size;
  eq -> size;
  merge -> nv;
  merge -> np;
  merge -> nv;
  mtimes -> nv;
  mtimes -> sparse;
  mtimes -> np;
  mtimes -> nv;
  np -> size;
  np -> size;
  nv -> size;
  nv -> size;
  partition -> sparse;
  partition -> check;
  parts -> size;
  parts -> size;
  plus -> nv;
  plus -> merge;
  plus -> nv;
  size -> size;
  size -> size;
  subsref -> size;
  subsref -> size;
  display -> cycles;
  eq -> np;
  inv -> array;
  inv -> array;
  inv -> permutation;
  isemptyMATGRAPH -> size;
  isemptyMATGRAPH -> size;
  longest_cycle -> cycles;
  miss -> array;
  miss -> array;
  mpower -> inv;
  mpower -> permutation;
  mtimes -> np;
  mtimes -> permutation;
  ne -> eq;
  ne -> eq;
  ne -> eq;
  permutation -> size;
  permutation -> size;
  randomMATGRAPH -> permutation;
  signMATGRAPH -> cycles;
  sizeMATGRAPH -> cycles;
  check_matrix -> size;
  check_matrix -> size;
  free_all -> graph_system_exists;
  graph_init -> graph_system_exists;
  graph_init -> set_large;
  max_available -> graph_system_exists;
  num_available -> graph_system_exists;
  cayley_graph -> cayley;
  cayley_graph -> distxy;
  cayley_graph -> draw;
  cayley_graph -> free;
  cayley_graph -> graph;
  cayley_graph -> ldraw;
  cayley_graph -> draw;
  cayley_graph -> permutation;
  cayley_graph -> swap;
  coloring -> bucky;
  coloring -> cdraw;
  coloring -> color;
  coloring -> free;
  coloring -> graph;
  coloring -> color;
  coloring -> np;
  domination -> cdraw;
  domination -> dom;
  domination -> free;
  domination -> graph;
  domination -> grid;
  domination -> nv;
  domination -> petersen;
  domination -> nv;
  domination -> partition;
  edraw -> add;
  edraw -> draw;
  edraw -> embed;
  edraw -> free;
  edraw -> getxy;
  edraw -> graph;
  edraw -> nv;
  edraw -> draw;
  edraw -> nv;
  eulerian -> cube;
  eulerian -> delete;
  eulerian -> distxy;
  eulerian -> euler_trail;
  eulerian -> free;
  eulerian -> graph;
  eulerian -> line_graph;
  eulerian -> ndraw;
  eulerian -> euler_trail;
  eulerian -> petersen;
  hamiltonian -> add;
  hamiltonian -> dodecahedron;
  hamiltonian -> draw;
  hamiltonian -> embed;
  hamiltonian -> free;
  hamiltonian -> getxy;
  hamiltonian -> graph;
  hamiltonian -> hamiltonian_cycle;
  hamiltonian -> nv;
  hamiltonian -> draw;
  hamiltonian -> nv;
  isomorphism -> add;
  isomorphism -> bucky;
  isomorphism -> cartesian;
  isomorphism -> copy;
  isomorphism -> cycle;
  isomorphism -> distxy;
  isomorphism -> draw;
  isomorphism -> free;
  isomorphism -> graph;
  isomorphism -> grid;
  isomorphism -> iso;
  isomorphism -> mobius;
  isomorphism -> ndraw;
  isomorphism -> nv;
  isomorphism -> draw;
  isomorphism -> iso;
  isomorphism -> random;
  isomorphism -> random_regular;
  isomorphism -> random_tree;
  isomorphism -> renumber;
  isomorphism -> nv;
  isomorphism -> permutation;
  matching -> bipartition;
  matching -> bipmatch;
  matching -> distxy;
  matching -> free;
  matching -> graph;
  matching -> grid;
  matching -> random_bipartite;
  matching -> random_tree;
  matching -> edraw;
  partn -> merge;
  partn -> partition;
  partn -> parts;
  perm -> matrix;
  perm -> random;
  perm -> array;
  perm -> array;
  perm -> cycles;
  perm -> inv;
  perm -> permutation;
  ramsey -> alpha;
  ramsey -> cdraw;
  ramsey -> free;
  ramsey -> graph;
  ramsey -> omega;
  ramsey -> paley;
  ramsey -> partition;
  spanning_tree -> bfstree;
  spanning_tree -> dfstree;
  spanning_tree -> draw;
  spanning_tree -> free;
  spanning_tree -> graph;
  spanning_tree -> icosahedron;
  spanning_tree -> nsptrees;
  spanning_tree -> draw;
  splitter -> cdraw;
  splitter -> distxy;
  splitter -> free;
  splitter -> graph;
  splitter -> grid;
  splitter -> random_tree;
  splitter -> split;
  set_large -> graph_system_exists;
  swap -> permutation;
  readImportedTemplates -> load;
  readImportedTemplates -> size;
  readImportedTemplates -> size;
  newTablePosition -> figResize;
  newTablePosition -> get_tableColumnWidth;
  newTablePosition -> save;
  newTablePosition -> size;
  newTablePosition -> size;
  newTablePosition -> sizeChar2Pixel;
  performSimulation -> editSimParams;
  saveParamSet2File -> load;
  saveParamSet2File -> save;
  saveParamSet2File -> size;
  saveParamSet2File -> size;
  sizeChar2Pixel -> size;
  sizeChar2Pixel -> size;
  systemConsistencyTest -> checkNodeInput;
  systemConsistencyTest -> nv;
  systemConsistencyTest -> size;
  systemConsistencyTest -> check;
  systemConsistencyTest -> nv;
  systemConsistencyTest -> size;
  testingValueSet -> getNumericValue;
  testingValueSet -> isValidData;
  testingValueSet -> delete;
  testingValueSet -> size;
  testingValueSet -> size;

  mtids [URL="mtids/mtids.html"];
  old_draw [URL="mtids/sandkasten/old_draw.html"];
  test_import_dynamic_parameters [URL="mtids/sandkasten/test_import_dynamic_parameters.html"];
  test_line [URL="mtids/sandkasten/test_line.html"];
  TextField1InputSpecs_Callback [URL="mtids/subfunctions/TextField1InputSpecs_Callback.html"];
  TextField2InputSpecs_Callback [URL="mtids/subfunctions/TextField2InputSpecs_Callback.html"];
  checkNodeInput [URL="mtids/subfunctions/checkNodeInput.html"];
  computeInputSizes [URL="mtids/subfunctions/computeInputSizes.html"];
  compute_SCC [URL="mtids/subfunctions/compute_SCC.html"];
  compute_WCC [URL="mtids/subfunctions/compute_WCC.html"];
  figResize [URL="mtids/subfunctions/figResize.html"];
  about_mtids [URL="mtids/subfunctions/figures/about_mtids.html"];
  editSimParams [URL="mtids/subfunctions/figures/editSimParams.html"];
  edit_node [URL="mtids/subfunctions/figures/edit_node.html"];
  edit_paramValues [URL="mtids/subfunctions/figures/edit_paramValues.html"];
  export_as_matrix [URL="mtids/subfunctions/figures/export_as_matrix.html"];
  import_dynamic_params [URL="mtids/subfunctions/figures/import_dynamic_params.html"];
  inputParamsAdaptation [URL="mtids/subfunctions/figures/inputParamsAdaptation.html"];
  manageParamSets [URL="mtids/subfunctions/figures/manageParamSets.html"];
  pp2 [URL="mtids/subfunctions/figures/pp2.html"];
  setnodecolor [URL="mtids/subfunctions/figures/setnodecolor.html"];
  getDegree [URL="mtids/subfunctions/getDegree.html"];
  getNumericValue [URL="mtids/subfunctions/getNumericValue.html"];
  getParamIDX [URL="mtids/subfunctions/getParamIDX.html"];
  getTemplateIDX [URL="mtids/subfunctions/getTemplateIDX.html"];
  get_BlockParams [URL="mtids/subfunctions/get_BlockParams.html"];
  get_tableColumnWidth [URL="mtids/subfunctions/get_tableColumnWidth.html"];
  initPlotParams [URL="mtids/subfunctions/initPlotParams.html"];
  input_parameter_adaptation_Callback [URL="mtids/subfunctions/input_parameter_adaptation_Callback.html"];
  adj_to_elist [URL="mtids/subfunctions/interface2Simulink/adj_to_elist.html"];
  any_matrix_to_elist [URL="mtids/subfunctions/interface2Simulink/any_matrix_to_elist.html"];
  blockCanvas [URL="mtids/subfunctions/interface2Simulink/blockCanvas.html"];
  blockPos [URL="mtids/subfunctions/interface2Simulink/blockPos.html"];
  buildSubsystem [URL="mtids/subfunctions/interface2Simulink/buildSubsystem.html"];
  create_ss_model [URL="mtids/subfunctions/interface2Simulink/create_ss_model.html"];
  exportLayer [URL="mtids/subfunctions/interface2Simulink/exportLayer.html"];
  exportLayer2 [URL="mtids/subfunctions/interface2Simulink/exportLayer2.html"];
  exportSimulink [URL="mtids/subfunctions/interface2Simulink/exportSimulink.html"];
  exportSimulink2 [URL="mtids/subfunctions/interface2Simulink/exportSimulink2.html"];
  importSimulink [URL="mtids/subfunctions/interface2Simulink/importSimulink.html"];
  matrix_to_string [URL="mtids/subfunctions/interface2Simulink/matrix_to_string.html"];
  templateModify [URL="mtids/subfunctions/interface2Simulink/templateModify.html"];
  templateModify2 [URL="mtids/subfunctions/interface2Simulink/templateModify2.html"];
  isValidData [URL="mtids/subfunctions/isValidData.html"];
  across [URL="mtids/subfunctions/matgraph/@graph/across.html"];
  add [URL="mtids/subfunctions/matgraph/@graph/add.html"];
  alpha [URL="mtids/subfunctions/matgraph/@graph/alpha.html"];
  bfstree [URL="mtids/subfunctions/matgraph/@graph/bfstree.html"];
  bipartition [URL="mtids/subfunctions/matgraph/@graph/bipartition.html"];
  bipmatch [URL="mtids/subfunctions/matgraph/@graph/bipmatch.html"];
  bridges [URL="mtids/subfunctions/matgraph/@graph/bridges.html"];
  bucky [URL="mtids/subfunctions/matgraph/@graph/bucky.html"];
  cartesian [URL="mtids/subfunctions/matgraph/@graph/cartesian.html"];
  cayley [URL="mtids/subfunctions/matgraph/@graph/cayley.html"];
  cdraw [URL="mtids/subfunctions/matgraph/@graph/cdraw.html"];
  chromatic_poly [URL="mtids/subfunctions/matgraph/@graph/chromatic_poly.html"];
  circulant [URL="mtids/subfunctions/matgraph/@graph/circulant.html"];
  clear_edges [URL="mtids/subfunctions/matgraph/@graph/clear_edges.html"];
  clear_labels [URL="mtids/subfunctions/matgraph/@graph/clear_labels.html"];
  color [URL="mtids/subfunctions/matgraph/@graph/color.html"];
  complement [URL="mtids/subfunctions/matgraph/@graph/complement.html"];
  complete [URL="mtids/subfunctions/matgraph/@graph/complete.html"];
  component [URL="mtids/subfunctions/matgraph/@graph/component.html"];
  components [URL="mtids/subfunctions/matgraph/@graph/components.html"];
  contract [URL="mtids/subfunctions/matgraph/@graph/contract.html"];
  copy [URL="mtids/subfunctions/matgraph/@graph/copy.html"];
  copy_labels [URL="mtids/subfunctions/matgraph/@graph/copy_labels.html"];
  cube [URL="mtids/subfunctions/matgraph/@graph/cube.html"];
  cycle [URL="mtids/subfunctions/matgraph/@graph/cycle.html"];
  deg [URL="mtids/subfunctions/matgraph/@graph/deg.html"];
  delete [URL="mtids/subfunctions/matgraph/@graph/delete.html"];
  dfstree [URL="mtids/subfunctions/matgraph/@graph/dfstree.html"];
  diam [URL="mtids/subfunctions/matgraph/@graph/diam.html"];
  disjoint_union [URL="mtids/subfunctions/matgraph/@graph/disjoint_union.html"];
  display [URL="mtids/subfunctions/matgraph/@graph/display.html"];
  dist [URL="mtids/subfunctions/matgraph/@graph/dist.html"];
  distxy [URL="mtids/subfunctions/matgraph/@graph/distxy.html"];
  dodecahedron [URL="mtids/subfunctions/matgraph/@graph/dodecahedron.html"];
  dom [URL="mtids/subfunctions/matgraph/@graph/dom.html"];
  dot [URL="mtids/subfunctions/matgraph/@graph/dot.html"];
  draw [URL="mtids/subfunctions/matgraph/@graph/draw.html"];
  draw_labels [URL="mtids/subfunctions/matgraph/@graph/draw_labels.html"];
  edge_color [URL="mtids/subfunctions/matgraph/@graph/edge_color.html"];
  edges [URL="mtids/subfunctions/matgraph/@graph/edges.html"];
  eig [URL="mtids/subfunctions/matgraph/@graph/eig.html"];
  embed [URL="mtids/subfunctions/matgraph/@graph/embed.html"];
  eq [URL="mtids/subfunctions/matgraph/@graph/eq.html"];
  euler_trail [URL="mtids/subfunctions/matgraph/@graph/euler_trail.html"];
  fast_set_matrix [URL="mtids/subfunctions/matgraph/@graph/fast_set_matrix.html"];
  fgraph [URL="mtids/subfunctions/matgraph/@graph/fgraph.html"];
  find_path [URL="mtids/subfunctions/matgraph/@graph/find_path.html"];
  free [URL="mtids/subfunctions/matgraph/@graph/free.html"];
  full [URL="mtids/subfunctions/matgraph/@graph/full.html"];
  get_label [URL="mtids/subfunctions/matgraph/@graph/get_label.html"];
  getxy [URL="mtids/subfunctions/matgraph/@graph/getxy.html"];
  graffle [URL="mtids/subfunctions/matgraph/@graph/graffle.html"];
  graph [URL="mtids/subfunctions/matgraph/@graph/graph.html"];
  grid [URL="mtids/subfunctions/matgraph/@graph/grid.html"];
  hamiltonian_cycle [URL="mtids/subfunctions/matgraph/@graph/hamiltonian_cycle.html"];
  has [URL="mtids/subfunctions/matgraph/@graph/has.html"];
  has_path [URL="mtids/subfunctions/matgraph/@graph/has_path.html"];
  hasxy [URL="mtids/subfunctions/matgraph/@graph/hasxy.html"];
  icosahedron [URL="mtids/subfunctions/matgraph/@graph/icosahedron.html"];
  incidence_matrix [URL="mtids/subfunctions/matgraph/@graph/incidence_matrix.html"];
  induce [URL="mtids/subfunctions/matgraph/@graph/induce.html"];
  intersect [URL="mtids/subfunctions/matgraph/@graph/intersect.html"];
  interval_graph [URL="mtids/subfunctions/matgraph/@graph/interval_graph.html"];
  is_labeled [URL="mtids/subfunctions/matgraph/@graph/is_labeled.html"];
  isconnected [URL="mtids/subfunctions/matgraph/@graph/isconnected.html"];
  isfull [URL="mtids/subfunctions/matgraph/@graph/isfull.html"];
  iso [URL="mtids/subfunctions/matgraph/@graph/iso.html"];
  issparse [URL="mtids/subfunctions/matgraph/@graph/issparse.html"];
  join [URL="mtids/subfunctions/matgraph/@graph/join.html"];
  label [URL="mtids/subfunctions/matgraph/@graph/label.html"];
  laplacian [URL="mtids/subfunctions/matgraph/@graph/laplacian.html"];
  ldraw [URL="mtids/subfunctions/matgraph/@graph/ldraw.html"];
  line_graph [URL="mtids/subfunctions/matgraph/@graph/line_graph.html"];
  load [URL="mtids/subfunctions/matgraph/@graph/load.html"];
  make_logical [URL="mtids/subfunctions/matgraph/@graph/make_logical.html"];
  match_join [URL="mtids/subfunctions/matgraph/@graph/match_join.html"];
  matrix [URL="mtids/subfunctions/matgraph/@graph/matrix.html"];
  matrixOfGraph [URL="mtids/subfunctions/matgraph/@graph/matrixOfGraph.html"];
  mdsxy [URL="mtids/subfunctions/matgraph/@graph/mdsxy.html"];
  mobius [URL="mtids/subfunctions/matgraph/@graph/mobius.html"];
  mycielski [URL="mtids/subfunctions/matgraph/@graph/mycielski.html"];
  nauty [URL="mtids/subfunctions/matgraph/@graph/nauty.html"];
  ndraw [URL="mtids/subfunctions/matgraph/@graph/ndraw.html"];
  ne [URL="mtids/subfunctions/matgraph/@graph/ne.html"];
  neighbors [URL="mtids/subfunctions/matgraph/@graph/neighbors.html"];
  nsptrees [URL="mtids/subfunctions/matgraph/@graph/nsptrees.html"];
  nv [URL="mtids/subfunctions/matgraph/@graph/nv.html"];
  octahedron [URL="mtids/subfunctions/matgraph/@graph/octahedron.html"];
  README [URL="mtids/subfunctions/matgraph/@graph/old-versions/README.html"];
  chromatic_poly [URL="mtids/subfunctions/matgraph/@graph/old-versions/chromatic_poly.html"];
  color [URL="mtids/subfunctions/matgraph/@graph/old-versions/color.html"];
  draw [URL="mtids/subfunctions/matgraph/@graph/old-versions/draw.html"];
  euler_trail [URL="mtids/subfunctions/matgraph/@graph/old-versions/euler_trail.html"];
  iso [URL="mtids/subfunctions/matgraph/@graph/old-versions/iso.html"];
  mtimes [URL="mtids/subfunctions/matgraph/@graph/old-versions/mtimes.html"];
  plus [URL="mtids/subfunctions/matgraph/@graph/old-versions/plus.html"];
  uminus [URL="mtids/subfunctions/matgraph/@graph/old-versions/uminus.html"];
  omega [URL="mtids/subfunctions/matgraph/@graph/omega.html"];
  paley [URL="mtids/subfunctions/matgraph/@graph/paley.html"];
  path [URL="mtids/subfunctions/matgraph/@graph/path.html"];
  petersen [URL="mtids/subfunctions/matgraph/@graph/petersen.html"];
  find_row [URL="mtids/subfunctions/matgraph/@graph/private/find_row.html"];
  q_capacity [URL="mtids/subfunctions/matgraph/@graph/private/q_capacity.html"];
  q_get [URL="mtids/subfunctions/matgraph/@graph/private/q_get.html"];
  q_init [URL="mtids/subfunctions/matgraph/@graph/private/q_init.html"];
  q_pop_back [URL="mtids/subfunctions/matgraph/@graph/private/q_pop_back.html"];
  q_pop_front [URL="mtids/subfunctions/matgraph/@graph/private/q_pop_front.html"];
  q_push [URL="mtids/subfunctions/matgraph/@graph/private/q_push.html"];
  q_size [URL="mtids/subfunctions/matgraph/@graph/private/q_size.html"];
  vector_compare [URL="mtids/subfunctions/matgraph/@graph/private/vector_compare.html"];
  prufer [URL="mtids/subfunctions/matgraph/@graph/prufer.html"];
  random [URL="mtids/subfunctions/matgraph/@graph/random.html"];
  random_bipartite [URL="mtids/subfunctions/matgraph/@graph/random_bipartite.html"];
  random_planar [URL="mtids/subfunctions/matgraph/@graph/random_planar.html"];
  random_regular [URL="mtids/subfunctions/matgraph/@graph/random_regular.html"];
  random_tree [URL="mtids/subfunctions/matgraph/@graph/random_tree.html"];
  randxy [URL="mtids/subfunctions/matgraph/@graph/randxy.html"];
  renumber [URL="mtids/subfunctions/matgraph/@graph/renumber.html"];
  resistance [URL="mtids/subfunctions/matgraph/@graph/resistance.html"];
  resize [URL="mtids/subfunctions/matgraph/@graph/resize.html"];
  rmxy [URL="mtids/subfunctions/matgraph/@graph/rmxy.html"];
  save [URL="mtids/subfunctions/matgraph/@graph/save.html"];
  scale [URL="mtids/subfunctions/matgraph/@graph/scale.html"];
  selective [URL="mtids/subfunctions/matgraph/@graph/selective.html"];
  set_matrix [URL="mtids/subfunctions/matgraph/@graph/set_matrix.html"];
  sgf [URL="mtids/subfunctions/matgraph/@graph/sgf.html"];
  shiftgraph [URL="mtids/subfunctions/matgraph/@graph/shiftgraph.html"];
  size [URL="mtids/subfunctions/matgraph/@graph/size.html"];
  sl2graph [URL="mtids/subfunctions/matgraph/@graph/sl2graph.html"];
  slot [URL="mtids/subfunctions/matgraph/@graph/slot.html"];
  sparse [URL="mtids/subfunctions/matgraph/@graph/sparse.html"];
  split [URL="mtids/subfunctions/matgraph/@graph/split.html"];
  sprandom [URL="mtids/subfunctions/matgraph/@graph/sprandom.html"];
  springxy [URL="mtids/subfunctions/matgraph/@graph/springxy.html"];
  spy [URL="mtids/subfunctions/matgraph/@graph/spy.html"];
  subsref [URL="mtids/subfunctions/matgraph/@graph/subsref.html"];
  thresh [URL="mtids/subfunctions/matgraph/@graph/thresh.html"];
  trim [URL="mtids/subfunctions/matgraph/@graph/trim.html"];
  union [URL="mtids/subfunctions/matgraph/@graph/union.html"];
  vertex_degree_sequence [URL="mtids/subfunctions/matgraph/@graph/vertex_degree_sequence.html"];
  wheel [URL="mtids/subfunctions/matgraph/@graph/wheel.html"];
  array [URL="mtids/subfunctions/matgraph/@partition/array.html"];
  check [URL="mtids/subfunctions/matgraph/@partition/check.html"];
  display [URL="mtids/subfunctions/matgraph/@partition/display.html"];
  eq [URL="mtids/subfunctions/matgraph/@partition/eq.html"];
  merge [URL="mtids/subfunctions/matgraph/@partition/merge.html"];
  mtimes [URL="mtids/subfunctions/matgraph/@partition/mtimes.html"];
  ne [URL="mtids/subfunctions/matgraph/@partition/ne.html"];
  np [URL="mtids/subfunctions/matgraph/@partition/np.html"];
  nv [URL="mtids/subfunctions/matgraph/@partition/nv.html"];
  partition [URL="mtids/subfunctions/matgraph/@partition/partition.html"];
  parts [URL="mtids/subfunctions/matgraph/@partition/parts.html"];
  plus [URL="mtids/subfunctions/matgraph/@partition/plus.html"];
  size [URL="mtids/subfunctions/matgraph/@partition/size.html"];
  subsref [URL="mtids/subfunctions/matgraph/@partition/subsref.html"];
  array [URL="mtids/subfunctions/matgraph/@permutation/array.html"];
  cycles [URL="mtids/subfunctions/matgraph/@permutation/cycles.html"];
  display [URL="mtids/subfunctions/matgraph/@permutation/display.html"];
  eq [URL="mtids/subfunctions/matgraph/@permutation/eq.html"];
  inv [URL="mtids/subfunctions/matgraph/@permutation/inv.html"];
  isemptyMATGRAPH [URL="mtids/subfunctions/matgraph/@permutation/isemptyMATGRAPH.html"];
  lengthMATGRAPH [URL="mtids/subfunctions/matgraph/@permutation/lengthMATGRAPH.html"];
  longest_cycle [URL="mtids/subfunctions/matgraph/@permutation/longest_cycle.html"];
  matrixPERM [URL="mtids/subfunctions/matgraph/@permutation/matrixPERM.html"];
  miss [URL="mtids/subfunctions/matgraph/@permutation/miss.html"];
  mpower [URL="mtids/subfunctions/matgraph/@permutation/mpower.html"];
  mtimes [URL="mtids/subfunctions/matgraph/@permutation/mtimes.html"];
  ne [URL="mtids/subfunctions/matgraph/@permutation/ne.html"];
  permutation [URL="mtids/subfunctions/matgraph/@permutation/permutation.html"];
  randomMATGRAPH [URL="mtids/subfunctions/matgraph/@permutation/randomMATGRAPH.html"];
  signMATGRAPH [URL="mtids/subfunctions/matgraph/@permutation/signMATGRAPH.html"];
  sizeMATGRAPH [URL="mtids/subfunctions/matgraph/@permutation/sizeMATGRAPH.html"];
  subsref [URL="mtids/subfunctions/matgraph/@permutation/subsref.html"];
  check_matrix [URL="mtids/subfunctions/matgraph/check_matrix.html"];
  find_available [URL="mtids/subfunctions/matgraph/find_available.html"];
  free_all [URL="mtids/subfunctions/matgraph/free_all.html"];
  genhtml [URL="mtids/subfunctions/matgraph/genhtml.html"];
  graph_destroy [URL="mtids/subfunctions/matgraph/graph_destroy.html"];
  graph_init [URL="mtids/subfunctions/matgraph/graph_init.html"];
  graph_system_exists [URL="mtids/subfunctions/matgraph/graph_system_exists.html"];
  matgraph_version [URL="mtids/subfunctions/matgraph/matgraph_version.html"];
  max_available [URL="mtids/subfunctions/matgraph/max_available.html"];
  num_available [URL="mtids/subfunctions/matgraph/num_available.html"];
  cayley_graph [URL="mtids/subfunctions/matgraph/samples/cayley_graph.html"];
  coloring [URL="mtids/subfunctions/matgraph/samples/coloring.html"];
  domination [URL="mtids/subfunctions/matgraph/samples/domination.html"];
  edraw [URL="mtids/subfunctions/matgraph/samples/edraw.html"];
  eulerian [URL="mtids/subfunctions/matgraph/samples/eulerian.html"];
  hamiltonian [URL="mtids/subfunctions/matgraph/samples/hamiltonian.html"];
  isomorphism [URL="mtids/subfunctions/matgraph/samples/isomorphism.html"];
  matching [URL="mtids/subfunctions/matgraph/samples/matching.html"];
  partn [URL="mtids/subfunctions/matgraph/samples/partn.html"];
  perm [URL="mtids/subfunctions/matgraph/samples/perm.html"];
  ramsey [URL="mtids/subfunctions/matgraph/samples/ramsey.html"];
  spanning_tree [URL="mtids/subfunctions/matgraph/samples/spanning_tree.html"];
  splitter [URL="mtids/subfunctions/matgraph/samples/splitter.html"];
  set_large [URL="mtids/subfunctions/matgraph/set_large.html"];
  swap [URL="mtids/subfunctions/matgraph/swap.html"];
  readImportedTemplates [URL="mtids/subfunctions/mtids_main/readImportedTemplates.html"];
  newTablePosition [URL="mtids/subfunctions/newTablePosition.html"];
  performSimulation [URL="mtids/subfunctions/performSimulation.html"];
  saveParamSet2File [URL="mtids/subfunctions/saveParamSet2File.html"];
  set_stringPlotOutputSignals [URL="mtids/subfunctions/set_stringPlotOutputSignals.html"];
  set_stringSelectedStates [URL="mtids/subfunctions/set_stringSelectedStates.html"];
  sizeChar2Pixel [URL="mtids/subfunctions/sizeChar2Pixel.html"];
  systemConsistencyTest [URL="mtids/subfunctions/systemConsistencyTest.html"];
  templateHasDependingInputs [URL="mtids/subfunctions/templateHasDependingInputs.html"];
  testingValueSet [URL="mtids/subfunctions/testingValueSet.html"];
}